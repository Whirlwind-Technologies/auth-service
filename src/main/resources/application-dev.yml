server:
  port: 8081

spring:
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5002/auth_db_dev}
    username: ${DB_USERNAME:auth_user}
    password: ${DB_PASSWORD:auth_pass}

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show_sql: true
        format_sql: true

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: 6379

  kafka:
    bootstrap-servers: ${KAFKA_BROKERS:kafka-0:29092,kafka-1:29092,kafka-2:29092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.protobuf.KafkaProtobufSerializer
      acks: all
      retries: 3
      properties:
        schema.registry.url: ${SCHEMA_REGISTRY_URL:http://schema-registry:8081}
        auto.register.schemas: true
        max.in.flight.requests.per.connection: 5
        enable.idempotence: true
        compression.type: snappy
        linger.ms: 10
        batch.size: 32768
    consumer:
      group-id: notification-service
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.protobuf.KafkaProtobufDeserializer
      auto-offset-reset: earliest
      enable-auto-commit: false
      properties:
        schema.registry.url: ${SCHEMA_REGISTRY_URL:http://schema-registry:8081}
        specific.protobuf.value.type: com.google.protobuf.DynamicMessage
        isolation.level: read_committed
        session.timeout.ms: 30000
        heartbeat.interval.ms: 10000
        max.poll.records: 10
        max.poll.interval.ms: 300000

# Event Topics Configuration
auth:
  kafka:
    topics:
      user-registered: nnipa.events.auth.user-registered
      password-changed: nnipa.events.auth.password-changed
      login-event: nnipa.events.auth.login
      mfa-event: nnipa.events.auth.mfa
      security-alert: nnipa.events.auth.security-alert

security:
  jwt:
    secret: dGhpcyBpcyBhIDUxMi1iaXQgc2VjcmV0IGtleSBmb3IgSFM1MTIgand0IHNpZ25pbmcgYWxnb3JpdGhtIGVuY29kZWQgaW4gYmFzZTY0IGZvcm1hdCB0aGF0IHlvdSBjYW4gdXNlIGZvciBzZWN1cmUgdG9rZW4=
    access-token-expiration: 1800000 # 30 minutes for dev
    refresh-token-expiration: 86400000 # 1 day for dev

  oauth2:
    client:
      registration:
        google:
          client-id: dev-google-client-id
          client-secret: dev-google-client-secret
          redirect-uri: http://localhost:8081/auth-service/login/oauth2/code/google

  password:
    policy:
      min-length: 8 # Relaxed for development
      max-age-days: 365 # Relaxed for development

  mfa:
    enabled: false # Disabled for easier development

  session:
    timeout: 3600 # 1 hour for development
    max-concurrent: 10 # More sessions allowed in dev

rate-limiting:
  login-attempts:
    max-attempts: 10 # More attempts in dev
    block-duration: 60 # Only 1 minute block in dev

services:
  tenant-service:
    url: http://localhost:8080
  authorization-service:
    url: http://localhost:8082
  notification-service:
    url: http://localhost:8085

logging:
  level:
    root: INFO
    com.nnipa.auth: DEBUG
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
    org.springframework.security.saml: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

  file:
    name: logs/auth-service-dev.log

# Development-specific features
debug: true

# Swagger UI enabled
springdoc:
  swagger-ui:
    enabled: true
    try-it-out-enabled: true

# Extended actuator endpoints for development
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always